// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
  // true : 컴파일러는 각 최상위 메시지, 열거형, 서비스 정의에 대해 별도의 java 파일을 생성한다.
  // false : 컴파일러가 해당 .proto 파일을 위한 하나의 java 파일만 생성한다. (하나의 래퍼 클래스에 모두 중첩되어 저장된다)
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
  // 래퍼 클래스 이름이 HelloWorldProto 로 지정된다.
  // 설정하지 않았을 경우 해당 proto 파일의 이름이 camel case로 변환되어 지정된다.
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  // Sends another greeting
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
